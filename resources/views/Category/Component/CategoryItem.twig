<script type="x/template" data-component="category-item">
    <article class="cmp cmp-product-thumb" :data-testing="item.variation.id">
        <div :class="paddingClasses" :style="paddingInlineStyles">

            <add-to-basket
                    data-testing="item-add-to-basket"
                    :variation-id="item.variation.id"
                    :is-salable="!!item.filter && item.filter.isSalable"
                    :has-children="!!item.item && item.item.salableVariationCount > 1"
                    :interval-quantity="item.variation.intervalOrderQuantity || 1"
                    :minimum-quantity="item.variation.minimumOrderQuantity"
                    :maximum-quantity="!!item.variation.maximumOrderQuantity && item.variation.maximumOrderQuantity > 0 ? item.variation.maximumOrderQuantity : null"
                    :order-properties="item.properties.filter(function(prop) { return prop.property.isOderProperty })"
                    :has-order-properties="item.hasOrderProperties"
                    :use-large-scale="true"
                    :show-quantity="false"
                    :item-url="item | itemURL(urlWithVariationId)"
                    :has-price="item | hasItemDefaultPrice"
                    :item-type="item.item.itemType">
            </add-to-basket>

            <div class="thumb-image">
                <div class="prop-1-1">
                    <slot name="item-image">
                        <category-image-carousel :image-urls-data="item.images | itemImages(imageUrlAccessor)"
                                                 :alt="item | itemName"
                                                 :item-url="item | itemURL(urlWithVariationId)"
                                                 :enable-carousel="$ceres.config.item.enableImageCarousel"
                                                 :disable-carousel-on-mobile="disableCarouselOnMobile"
                                                 :showDots="false"
                                                 ref="categoryImageCarousel">
                        </category-image-carousel>
                    </slot>
                </div>
            </div>

            <!-- STORE SPECIALS -->
            {# <slot name="store-special">
                <item-store-special v-if="storeSpecial || item.variation.bundleType === 'bundle' || item.item.itemType === 'set'"
                                    :store-special="storeSpecial"
                                    :recommended-retail-price="item.prices.rrp"
                                    :variation-retail-price="item.prices.default"
                                    :special-offer-price="item.prices.specialOffer"
                                    :decimal-count="decimalCount"
                                    :bundle-type="item.variation.bundleType"
                                    :item-type="item.item.itemType">
                </item-store-special>
            </slot> #}
            <!-- ./STORE SPECIALS -->

            <!-- ITEM DETAILS -->
            <slot name="item-details">
                <div class="thumb-content">
                    <div class="thumb-meta mt-2">
                        <slot name="before-prices"></slot>
                        <div class="prices">
                            <div v-if="item.prices.rrp && item.prices.rrp.price.value > 0 && item.prices.rrp.price.value > item.prices.default.unitPrice.value" class="price-view-port">
                                <del class="crossprice" v-if="item.prices.specialOffer">
                                    ${ item.prices.default.unitPrice.formatted | itemCrossPrice(true) }
                                </del>
                                <del class="crossprice" v-else>
                                    ${ item.prices.rrp.unitPrice.formatted | itemCrossPrice }
                                </del>
                            </div>

                            <div class="price">
                                <template v-if="item.item.itemType === 'set'">
                                    ${ $translate("Ceres::Template.itemSetPrice", { price: itemSetPrice }) } *
                                </template>
                                <template v-else-if="!!item.item && item.item.salableVariationCount > 1 && $ceres.isCheapestSorting" >
                                    ${ $translate("Ceres::Template.categoryItemFromPrice", { price: itemPrice }) } *
                                </template>
                                <template v-else>
                                    ${ item.prices.default.unitPrice.formatted | specialOffer(item.prices, "unitPrice", "formatted") }
                                </template>
                            </div>
                        </div>
                    </div>

                    <slot name="after-prices"></slot>

                    <div class="category-unit-price small" v-if="!(item.unit.unitOfMeasurement === 'C62' && item.unit.content === 1)">
                        <span>${ item.unit.content }</span>
                        <span>&nbsp;${ item.unit.names.name }</span>
                        <span v-if="item.variation.mayShowUnitPrice">&nbsp;| ${ item.prices.default.basePrice } </span>
                    </div>

                    <!--add-to-basket
                            :variation-id="item.variation.id"
                            :is-salable="!!item.filter && item.filter.isSalable"
                            :has-children="!!item.item && item.item.salableVariationCount > 1"
                            :interval-quantity="item.variation.intervalOrderQuantity || 1"
                            :minimum-quantity="item.variation.minimumOrderQuantity"
                            :maximum-quantity="!!item.variation.maximumOrderQuantity && item.variation.maximumOrderQuantity > 0 ? item.variation.maximumOrderQuantity : null"
                            :order-properties="item.properties.filter(function(prop) { return prop.property.isOderProperty })"
                            :has-order-properties="item.hasOrderProperties"
                            :use-large-scale="false"
                            :show-quantity="false"
                            :item-url="item | itemURL(urlWithVariationId)"
                            :has-price="item | hasItemDefaultPrice"
                            :item-type="item.item.itemType">
                    </add-to-basket-->

                    <slot name="item-name"></slot>

                </div>
            </slot>
            <!-- ./ITEM DETAILS  -->
        </div>
    </article>
</script>